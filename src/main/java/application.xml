<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        ">

	<!-- Hibernate4 -->
	<!-- 加载资源文件 其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载 -->
	<context:property-placeholder location="classpath:persistence-mysql.properties" />

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.pass}" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="20" />
		<property name="minIdle" value="1" />
		<property name="maxWait" value="60000" />
		<!-- <property name="validationQuery" value="${validationQuery}" /> -->
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="mergeStat" />
	</bean>
	<!---->

	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="${jdbc.driverClassName}" /> <property 
		name="url" value="${jdbc.url}" /> <property name="username" value="${jdbc.user}" 
		/> <property name="password" value="${jdbc.pass}" /> </bean> -->
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true" />


	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置公共类对象 -->
	<bean id="baseDao" class="cq.base.dao.impl.SSH2BaseDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean name="friendGroup" class="net.cxd.entity.FriendGroup"></bean>
	<bean name="user" class="net.cxd.entity.User"></bean>
	<bean name="userFriend" class="net.cxd.entity.UserFriend"></bean>
	<bean name="userInfo" class="net.cxd.entity.UserInfo"></bean>
	<bean name="userGroup" class="net.cxd.entity.UserGroup"></bean>
	<bean name="userMsg" class="net.cxd.entity.UserMsg"></bean>
	<bean name="group" class="net.cxd.entity.Group"></bean>


	<bean name="baseService" class="net.cxd.http.Service.impl.BaseServiceImpl">
		<property name="baseDao" ref="baseDao"></property>
	</bean>
	<bean name="msgService" class="net.cxd.server.MessageService">
		<property name="baseDao" ref="baseDao"></property>
	</bean>


	<bean name="userService" class="net.cxd.http.Service.impl.UserServiceImpl"
		parent="baseService"></bean>





	<!-- 配置公共类对象 <bean id="pageDao" class="cq.base.dao.impl.PageDaoImpl"> <property 
		name="sessionFactory" ref="sessionFactory" /> </bean> -->
	<!-- <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> -->
	<!-- 配置sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- -->
		<property name="lobHandler" ref="lobHandler" />

		<property name="packagesToScan">
			<list>
				<value>net.cxd.entity</value>
			</list>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>cq.base.entity.LogBean</value>
				<!-- <value>net.cxd.im.entity.Group</value> <value>net.cxd.im.entity.FriendGroup</value> 
					<value>net.cxd.im.entity.GroupMsg</value> <value>net.cxd.im.entity.User</value> 
					<value>net.cxd.im.entity.UserFriend</value> <value>net.cxd.im.entity.UserGroup</value> 
					<value>net.cxd.im.entity.UserInfo</value> <value>net.cxd.im.entity.UserMsg</value> -->
			</list>
		</property>

		<!-- <property name="packagesToScan"> <list> <value>cg.xihugis.entity</value> 
			</list> </property> <property name="hibernateProperties"> <props> <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop> 
			<prop key="hibernate.hbm2ddl.auto">update</prop> <prop key="hibernate.show_sql">true</prop> 
			<prop key="hibernate.cache.use_second_level_cache">true</prop> <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop> 
			<prop key="hibernate.cache.use_query_cache">true</prop> </props> </property> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<!-- <prop key="hibernate.cache.use_second_level_cache">true</prop> <prop 
					key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop> 
					<prop key="hibernate.cache.use_query_cache">true</prop> -->
			</props>
		</property>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 配置事务传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="regist" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 被事务管理的方法 -->
	<aop:config>
		<aop:pointcut id="allManagerMethod" expression="execution(* *..*Service.*(..))" />
		<aop:advisor pointcut-ref="allManagerMethod" advice-ref="txAdvice" />
	</aop:config>
	<!-- <import resource="net/cxd/config/spring_*.xml" /> -->


</beans>